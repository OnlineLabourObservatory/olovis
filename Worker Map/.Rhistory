theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
worker_data$date <- as.Date(worker_data$timestamp, format = "%Y-%M-%D")
worker_data$month <- cut(worker_data$date, breaks = "months")
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("date", "worker", "occupation")
colnames(df) <- x
for (i in unique(worker_data$occupation)) {
df_temp <- worker_data %>% filter(occupation == i & country == "Serbia")
df_temp <- df_temp %>% mutate(worker = rollmean(df_temp$num_workers/df_temp$num_workers[df_temp$date == "2020-01-01"]*100, 28, fill = list(NA, NULL, NA), align = "right"))
df_temp$worker <- ifelse(is.na(df_temp$worker), df_temp$worker, df_temp$worker)
df_temp <- subset(df_temp, date>="2020-01-01" & date<="2020-09-22")
df_temp <- df_temp %>% mutate(worker = df_temp$worker/df_temp$worker[df_temp$date == "2020-01-01"]*100)
df_temp <- df_temp[,c("date","worker","occupation")]
df <- rbind(df,df_temp)
}
df$occupation[df$occupation=="Software development and technology"] <-  "Software development and tech"
ggplot(df, aes(x = as.Date(date), y = worker)) +
geom_line(aes(color=occupation), size = 3) +
scale_color_manual(values = cls) +
labs(y="Registered workers in Serbia (100 = February 1st)",x="2020", caption = "Source: Online Labour Index - ilabour.oii.ox.ac.uk") +
theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
worker_data$date <- as.Date(worker_data$timestamp, format = "%Y-%M-%D")
worker_data$month <- cut(worker_data$date, breaks = "months")
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("date", "worker", "occupation")
colnames(df) <- x
for (i in unique(worker_data$occupation)) {
df_temp <- worker_data %>% filter(occupation == i & country == "Serbia")
#df_temp <- df_temp %>% mutate(worker = rollmean(df_temp$num_workers/df_temp$num_workers[df_temp$date == "2019-01-01"]*100, 28, fill = list(NA, NULL, NA), align = "right"))
df_temp$worker <- ifelse(is.na(df_temp$worker), df_temp$worker, df_temp$worker)
df_temp <- subset(df_temp, date>="2020-01-01" & date<="2020-09-22")
df_temp <- df_temp %>% mutate(worker = df_temp$worker/df_temp$worker[df_temp$date == "2020-01-01"]*100)
df_temp <- df_temp[,c("date","worker","occupation")]
df <- rbind(df,df_temp)
}
df$occupation[df$occupation=="Software development and technology"] <-  "Software development and tech"
ggplot(df, aes(x = as.Date(date), y = worker)) +
geom_line(aes(color=occupation), size = 3) +
scale_color_manual(values = cls) +
labs(y="Registered workers in Serbia (100 = February 1st)",x="2020", caption = "Source: Online Labour Index - ilabour.oii.ox.ac.uk") +
theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
worker_data$date <- as.Date(worker_data$timestamp, format = "%Y-%M-%D")
worker_data$month <- cut(worker_data$date, breaks = "months")
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("date", "worker", "occupation")
colnames(df) <- x
for (i in unique(worker_data$occupation)) {
df_temp <- worker_data %>% filter(occupation == i & country == "Serbia")
df_temp <- df_temp %>% mutate(worker = rollmean(df_temp$num_workers/df_temp$num_workers[df_temp$date == "2019-01-01"]*100, 28, fill = list(NA, NULL, NA), align = "right"))
df_temp$worker <- ifelse(is.na(df_temp$worker), df_temp$worker, df_temp$worker)
df_temp <- subset(df_temp, date>="2020-01-01" & date<="2020-09-22")
df_temp <- df_temp %>% mutate(worker = df_temp$worker/df_temp$worker[df_temp$date == "2020-01-01"]*100)
df_temp <- df_temp[,c("date","worker","occupation")]
df <- rbind(df,df_temp)
}
df$occupation[df$occupation=="Software development and technology"] <-  "Software development and tech"
ggplot(df, aes(x = as.Date(date), y = worker)) +
geom_line(aes(color=occupation), size = 3) +
scale_color_manual(values = cls) +
labs(y="Registered workers in Serbia (100 = February 1st)",x="2020", caption = "Source: Online Labour Index - ilabour.oii.ox.ac.uk") +
theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
worker_data$date <- as.Date(worker_data$timestamp, format = "%Y-%M-%D")
worker_data$month <- cut(worker_data$date, breaks = "months")
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("date", "worker", "occupation")
colnames(df) <- x
for (i in unique(worker_data$occupation)) {
df_temp <- worker_data %>% filter(occupation == i & country == "Serbia")
df_temp <- df_temp %>% mutate(worker = rollmean(df_temp$num_workers/df_temp$num_workers[df_temp$date == "2020-01-01"]*100, 28, fill = list(NA, NULL, NA), align = "right"))
df_temp$worker <- ifelse(is.na(df_temp$worker), df_temp$worker, df_temp$worker)
df_temp <- subset(df_temp, date>="2020-01-01" & date<="2020-09-22")
#df_temp <- df_temp %>% mutate(worker = df_temp$worker/df_temp$worker[df_temp$date == "2020-01-01"]*100)
df_temp <- df_temp[,c("date","worker","occupation")]
df <- rbind(df,df_temp)
}
df$occupation[df$occupation=="Software development and technology"] <-  "Software development and tech"
ggplot(df, aes(x = as.Date(date), y = worker)) +
geom_line(aes(color=occupation), size = 3) +
scale_color_manual(values = cls) +
labs(y="Registered workers in Serbia (100 = February 1st)",x="2020", caption = "Source: Online Labour Index - ilabour.oii.ox.ac.uk") +
theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
worker_data$date <- as.Date(worker_data$timestamp, format = "%Y-%M-%D")
worker_data$month <- cut(worker_data$date, breaks = "months")
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("date", "worker", "occupation")
colnames(df) <- x
for (i in unique(worker_data$occupation)) {
df_temp <- worker_data %>% filter(occupation == i & country == "Serbia")
df_temp <- df_temp %>% mutate(worker = rollmean(df_temp$num_workers/df_temp$num_workers[df_temp$date == "2020-01-01"]*100, 28, fill = list(NA, NULL, NA), align = "right"))
df_temp$worker <- ifelse(is.na(df_temp$worker), df_temp$worker, df_temp$worker)
df_temp <- subset(df_temp, date>="2020-01-01" & date<="2020-09-22")
df_temp <- df_temp %>% mutate(worker = df_temp$worker/df_temp$worker[df_temp$date == "2020-01-01"]*100)
df_temp <- df_temp[,c("date","worker","occupation")]
df <- rbind(df,df_temp)
}
df$occupation[df$occupation=="Software development and technology"] <-  "Software development and tech"
ggplot(df, aes(x = as.Date(date), y = worker)) +
geom_line(aes(color=occupation), size = 3) +
scale_color_manual(values = cls) +
labs(y="Registered workers in Serbia (100 = February 1st)",x="2020", caption = "Source: Online Labour Index - ilabour.oii.ox.ac.uk") +
theme_minimal() + theme(axis.text=element_text(size=20), axis.title = element_text(size=20),
legend.text =element_text(size=20), legend.title =element_text(size=20),
legend.position="bottom") + theme(legend.title=element_blank())
write_csv(df,"/Users/fabian/Desktop/supply_serbia_occupations.csv")
setwd("~/Fabian GDrive/Projects/Research Projects/OII/OLO/Worker Map")
##########################################################################
# Create OLI Worker Maps
# Fabian Stephany | fabian.stephany@oii.ox.ac.uk
# iLabour Group | ilabour.ox.ac.uk
# Created: 14.07.2020
# Example layout: https://shiny.rstudio.com/gallery/navbar-example.html
# Plotly Toolbar: https://plotly-r.com/control-modebar.html
# Choropleth Map: https://stackoverflow.com/questions/40608284/r-plotly-zoom-on-a-choropleth-map
# SO on Leaflets: https://stackoverflow.com/questions/49503672/render-leaflet-markers-across-tabs-on-shiny-startupb
# More on Leaflets: https://cfss.uchicago.edu/notes/leaflet/
# More on Leaflets: https://rstudio.github.io/leaflet/
##########################################################################
#%#%#%#%#%#%#%#%#%#%#%#%
# Load Packages
#%#%#%#%#%#%#%#%#%#%#%#%
library(shiny)
library(dplyr)
library(tidyverse)
library(plotly)
library(readr)
library(data.table)
library(scales)
library(RColorBrewer)
library(zoo)
library(lubridate)
library(htmlwidgets)
library(leaflet)
library(raster)
library(rsconnect)
library("rfigshare")
library(spData)
library(sf)
library("readxl")
library(shinybusy)
#> Linking to GEOS 3.5.0, GDAL 2.1.2, proj.4 4.9.2
library(tmap)
'%!in%' <- function(x,y)!('%in%'(x,y))
## Define Wes Anderson colour scheme
budapest = c("#733080","#F4BAC8","#A40607","#7288B9","#F0C595")
#%#%#%#%#%#%#%#%#%#%#%#%
# Load Dashboard data
#%#%#%#%#%#%#%#%#%#%#%#%
# Access data from FigShare repository
## Request access to repository
fs_deposit_id <- 3761562
deposit_details <- fs_details(fs_deposit_id)
deposit_details <- unlist(deposit_details$files)
deposit_details <- data.frame(split(deposit_details, names(deposit_details)), stringsAsFactors = F)
# Import worker supply data
worker_data <- read_csv(deposit_details[grepl("worker_countrydata_",deposit_details$name),"download_url"])
worker_data$timestamp <- as.Date(worker_data$timestamp)
worker_data$date <- as.Date(as.character(worker_data$timestamp), format = "%Y-%m-%d")
# Rename label
worker_data$occupation[worker_data$occupation == "Software development and technology"] <-
"Software dev. and tech."
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers)) %>%
group_by(country, occupation, total) %>% dplyr::summarise(occ_count = sum(num_workers)) %>%
group_by(country, total) %>% mutate(cnt_count = sum(occ_count)) %>%
mutate(country_share = round(cnt_count/total,2),
occupation_share = round(occ_count/total,2))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers)) %>%
group_by(country, occupation, total) %>% dplyr::summarise(occ_count = sum(num_workers)) %>%
group_by(country, total) %>% mutate(cnt_count = sum(occ_count)) %>%
mutate(country_share = round(cnt_count/total,2),
occupation_share = round(occ_count/total,2))
View(df)
df <- df %>% group_by(country) %>% mutate(rank = order(country_share))
View(df)
df <- df %>% mutate(rank = order(-country_share))
View(df)
df <- df %>% mutate(rank = dense_rank(desc(country_share)))
View(df)
df <- df %>% mutate(rank = rank(desc(country_share)))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers)) %>%
group_by(country, occupation, total) %>% dplyr::summarise(occ_count = sum(num_workers)) %>%
group_by(country, total) %>% mutate(cnt_count = sum(occ_count)) %>%
mutate(country_share = round(cnt_count/total,3),
occupation_share = round(occ_count/total,3))
df <- df %>% mutate(rank = rank(-country_share))
View(df)
unique(df$country[df$country_share>=0.06])
unique(df$country[df$country_share>=0.01])
unique(df$country[df$country_share>=0.005])
unique(df$country[df$country_share>=0.006])
unique(df$country[df$country_share>=0.007])
unique(df$country[df$country_share>=0.008])
unique(df$country[df$country_share>=0.009])
unique(df$country[df$country_share>=0.008])
unique(df$country[df$country_share>=0.007])
unique(df$country[df$country_share>=0.006])
View(df)
View(df)
View(df)
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers)) %>%
group_by(country, occupation, total) %>%
dplyr::summarise(occupation_share = round(sum(num_workers)/total,3))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
mutate(total = sum(num_workers))
View(df)
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(total = sum(num_workers))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers))
df <- df %>% mutate(total = sum(num_workers))
View(df)
df <- df %>% mutate(total = sum(df$num_workers))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(total = sum(df$num_workers))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3))
View(df)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) < "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
View(df)
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
df %>% filter(country_share>=0.005) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
df %>% filter(country_share>=0.005) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
c("India","Bangladesh","United States","Pakistan","Phillipines","United Kingdom","Ukraine","Canada",
"Romanina","Egypt","Germany","Russia","Kenya","Nigeria","Italy","Spain","Sri Lanka","Serbia","Ireland",
"Macedonia")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
selection <- c("India","Bangladesh","United States","Pakistan","Phillipines","United Kingdom","Ukraine","Canada",
"Romanina","Egypt","Germany","Russia","Kenya","Nigeria","Italy","Spain","Sri Lanka","Serbia","Ireland",
"Macedonia")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
View(df)
selection <- c("India","Bangladesh","United States","Pakistan","Philippines","United Kingdom","Ukraine","Canada",
"Romanina","Egypt","Germany","Russia","Kenya","Nigeria","Italy","Spain","Sri Lanka","Serbia","Ireland",
"Macedonia")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
selection <- c("India","Bangladesh","United States","Pakistan","Philippines","United Kingdom","Ukraine","Canada",
"Romania","Egypt","Germany","Russia","Kenya","Nigeria","Italy","Spain","Sri Lanka","Serbia","Ireland",
"Macedonia")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) #+ scale_fill_manual(values=cbPalette)
# The palette with black
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=occupation, y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
write.csv(df %>% filter(country %in% selection), "top20_worker_countries_2017.csv", row.names = FALSE, quote = FALSE)
df <- worker_data %>% filter(as.character(date) >= "2021-01-01" & as.character(date) <= "2021-04-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
View(df)
df$country[df$country_share>=0.01]
unique(df$country[df$country_share>=0.01])
unique(df$country[df$country_share>=0.05])
unique(df$country[df$country_share>=0.0])
unique(df$country[df$country_share>=0.03])
unique(df$country[df$country_share>=0.02])
unique(df$country[df$country_share>=0.015])
unique(df$country[df$country_share>=0.016])
unique(df$country[df$country_share>=0.015])
unique(df$country[df$country_share>=0.0155])
unique(df$country[df$country_share>=0.0153])
unique(df$country[df$country_share>=0.015])
df %>% filter(country_share>=0.015) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2021-03-01" & as.character(date) <= "2021-04-01") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
df %>% filter(country_share>=0.015) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
unique(df$country[df$country_share>=0.02])
unique(df$country[df$country_share>=0.01])
unique(df$country[df$country_share>=0.005])
unique(df$country[df$country_share>=0.006])
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
write.csv(df %>% filter(country_share>=0.006), "top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
View(df)
write.csv(df %>% filter(country_share>=0.006) %>% selection(country, occupation, occupation_share),
"top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
write.csv(df %>% filter(country_share>=0.006) %>% select(country, occupation, occupation_share),
"top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
write.csv(df %>% filter(country_share>=0.006) %>% select(country, occupation, occupation_share, country_share),
"top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
write.csv(df %>% filter(country_share>=0.006) %>% dplyr::select(country, occupation, occupation_share),
"top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
selection <- c("India","Bangladesh","United States","Pakistan","Philippines","United Kingdom","Ukraine","Canada",
"Romania","Egypt","Germany","Russia","Kenya","Nigeria","Italy","Spain","Sri Lanka","Serbia","Ireland",
"Macedonia")
df %>% filter(country %in% selection) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
write.csv(df %>% filter(country %in% selection) %>% dplyr::select(country, occupation, occupation_share),
"top20_worker_countries_2017.csv", row.names = FALSE, quote = FALSE)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.006])
unique(df$country[df$country_share>=0.005])
unique(df$country[df$country_share>=0.0055])
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 4)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.0055])
unique(df$country[df$country_share>=0.0056])
df %>% filter(country_share>=0.0056) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
write.csv(df %>% filter(country_share>=0.0056) %>% dplyr::select(country, occupation, occupation_share),
"top20_worker_countries_2017.csv", row.names = FALSE, quote = FALSE)
df <- worker_data %>% filter(as.character(date) >= "2021-03-01" & as.character(date) <= "2021-04-01") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2021-03-01" & as.character(date) <= "2021-04-01") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 3)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.006])
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 4)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.0056])
df <- worker_data %>% filter(as.character(date) >= "2017-07-01" & as.character(date) <= "2017-07-06") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 4)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.0056])
df %>% filter(country_share>=0.0056) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2021-03-01" & as.character(date) <= "2021-04-01") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 4)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.0056])
unique(df$country[df$country_share>=0.006])
unique(df$country[df$country_share>=0.06])
unique(df$country[df$country_share>=0.05])
unique(df$country[df$country_share>=0.03])
unique(df$country[df$country_share>=0.01])
unique(df$country[df$country_share>=0.02])
unique(df$country[df$country_share>=0.025])
unique(df$country[df$country_share>=0.02])
unique(df$country[df$country_share>=0.015])
df %>% filter(country_share>=0.015) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
df <- worker_data %>% filter(as.character(date) >= "2021-03-01" & as.character(date) <= "2021-03-30") %>%
group_by(country, occupation) %>% dplyr::summarise(num_workers = mean(num_workers)) %>%
mutate(occupation_share = round(num_workers / sum(df$num_workers), 4)) %>%
group_by(country) %>% mutate(country_share = sum(occupation_share))
unique(df$country[df$country_share>=0.015])
unique(df$country[df$country_share>=0.06])
unique(df$country[df$country_share>=0.01])
unique(df$country[df$country_share>=0.006])
df %>% filter(country_share>=0.006) %>%
ggplot(aes(fill=reorder(occupation,occupation_share),
y=occupation_share*100, x=reorder(country, country_share))) +
geom_bar(position="stack", stat="identity") +
labs(x = "", y = "", colour = "", fill = "") + coord_flip() +
theme_bw() + theme(text = element_text(size = 15), legend.position = "bottom", panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) + scale_fill_manual(values=cbPalette)
write.csv(df %>% filter(country_share>=0.006) %>% dplyr::select(country, occupation, occupation_share),
"top20_worker_countries_2017.csv", row.names = FALSE, quote = FALSE)
write.csv(df %>% filter(country_share>=0.006) %>% dplyr::select(country, occupation, occupation_share),
"top20_worker_countries_2021.csv", row.names = FALSE, quote = FALSE)
